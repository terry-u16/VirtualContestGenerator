// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VirtualContestGenerator.Data;

namespace VirtualContestGenerator.Migrations
{
    [DbContext(typeof(AtCoderProblemsContext))]
    partial class AtCoderProblemsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VirtualContestGenerator.Models.Contest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("MaxRated")
                        .HasColumnType("int");

                    b.Property<int?>("MinRated")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contests");
                });

            modelBuilder.Entity("VirtualContestGenerator.Models.DifficultyInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Difficulty")
                        .HasColumnType("int");

                    b.Property<bool>("IsExperimental")
                        .HasColumnType("bit");

                    b.Property<string>("ProblemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProblemId")
                        .IsUnique();

                    b.ToTable("DifficultyInfos");
                });

            modelBuilder.Entity("VirtualContestGenerator.Models.Problem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContestId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("HasSelected")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContestId");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("VirtualContestGenerator.Models.DifficultyInfo", b =>
                {
                    b.HasOne("VirtualContestGenerator.Models.Problem", "Problem")
                        .WithOne("DifficultyInfo")
                        .HasForeignKey("VirtualContestGenerator.Models.DifficultyInfo", "ProblemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VirtualContestGenerator.Models.Problem", b =>
                {
                    b.HasOne("VirtualContestGenerator.Models.Contest", "Contest")
                        .WithMany("Problems")
                        .HasForeignKey("ContestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
